/*
 * VocaloSysUtil.java
 * Copyright (c) 2009 kbinani
 *
 * This file is part of com.boare.vsq.
 *
 * com.boare.vsq is free software; you can redistribute it and/or
 * modify it under the terms of the BSD License.
 *
 * com.boare.vsq is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */
package com.boare.vsq;

import java.util.*;
import java.text.*;
import java.io.*;
import com.boare.corlib.*;

public class VocaloSysUtil {
    // レジストリを取得するツールのexeファイルをbase64エンコードしたもの。
    // 初回実行時に、一時ディレクトリにexeを展開して起動する
    private static final String UTIL_EXE = "";

    private static boolean s_initialized = false;

    private static String s_dll_path2 = "";
    private static String s_editor_path2 = "";
    private static String s_voicedbdir2 = "";
    private static Vector<SingerConfig> s_installed_singers2 = new Vector<SingerConfig>();
    private static Vector<SingerConfig> s_singer_configs2 = new Vector<SingerConfig>();

    private static String s_dll_path1 = "";
    private static String s_editor_path1 = "";
    private static String s_voicedbdir1 = "";
    private static Vector<SingerConfig> s_installed_singers1 = new Vector<SingerConfig>();
    private static Vector<SingerConfig> s_singer_configs1 = new Vector<SingerConfig>();

    private static final int MAX_SINGERS = 0x4000;

    static{
        System.out.println( "VocaloSysUtil; static ctor." );
        String logfile = "";
        try{
            File exe = File.createTempFile( "util", ".exe" );
            FileOutputStream fs = new FileOutputStream( exe );
            fs.write( Base64.decode( UTIL_EXE ) );
            fs.close();
            File log = File.createTempFile( "reg", ".txt" );
            logfile = log.getAbsolutePath();
            Process p = Runtime.getRuntime().exec( "\"" + exe.getAbsolutePath() + "\" \"" + logfile + "\"" );
            p.waitFor();
            exe.delete();
        }catch( Exception ex ){
            System.out.println( "ex=" + ex );
            logfile = "";
        }
        init_vocalo1( logfile );
        init_vocalo2( logfile );
        (new File( logfile )).delete();
    }

    /// <summary>
    /// Gets the name of original singer of specified program change.
    /// </summary>
    /// <param name="singer"></param>
    /// <returns></returns>
    public static String getOriginalSinger1( String singer ) {
        String voiceidstr = "";
        int c = s_singer_configs1.size();
        for ( int i = 0; i < c; i++ ) {
            if ( singer.equals( s_singer_configs1.get( i ).VOICENAME ) ) {
                voiceidstr = s_singer_configs1.get( i ).VOICEIDSTR;
                break;
            }
        }
        if ( voiceidstr.equals( "" ) ) {
            return "";
        }
        c = s_installed_singers1.size();
        for ( int i = 0; i < c; i++ ) {
            if ( voiceidstr.equals( s_installed_singers1.get( i ).VOICEIDSTR ) ) {
                return s_installed_singers1.get( i ).VOICENAME;
            }
        }
        return "";
    }

    /// <summary>
    /// Gets the name of original singer of specified program change.
    /// </summary>
    /// <param name="singer"></param>
    /// <returns></returns>
    public static String getOriginalSinger2( String singer ) {
        String voiceidstr = "";
        int c = s_singer_configs2.size();
        for ( int i = 0; i < c; i++ ) {
            if ( singer.equals( s_singer_configs2.get( i ).VOICENAME ) ) {
                voiceidstr = s_singer_configs2.get( i ).VOICEIDSTR;
                break;
            }
        }
        if ( voiceidstr.equals( "" ) ) {
            return "";
        }
        c = s_installed_singers2.size();
        for ( int i = 0; i < c; i++ ) {
            if ( voiceidstr.equals( s_installed_singers2.get( i ).VOICEIDSTR ) ) {
                return s_installed_singers2.get( i ).VOICENAME;
            }
        }
        return "";
    }

    /// <summary>
    /// Gets the voice language of specified program change
    /// </summary>
    /// <param name="name">name of singer</param>
    /// <returns></returns>
    private static int getLanguageFromName( String name ) {
        if( name.equals( "MEIKO" ) ||
            name.equals( "KAITO" ) ||
            name.equals( "Miku" ) ||
            name.equals( "Rin" ) ||
            name.equals( "Len" ) ||
            name.equals( "Rin_ACT2" ) ||
            name.equals( "Len_ACT2" ) ||
            name.equals( "Gackpoid" ) ||
            name.equals( "Luka_JPN" ) ||
            name.equals( "Megpoid" ) ){
            return VsqVoiceLanguage.Japanese;
        }else if( name.equals( "Sweet_Ann" ) ||
                  name.equals( "Prima" ) ||
                  name.equals( "Luka_ENG" ) ){
            return VsqVoiceLanguage.English;
        }
        return VsqVoiceLanguage.Default;
    }

    public static VsqID getSingerID1( String singer_name ) {
        VsqID ret = new VsqID( 0 );
        ret.type = VsqIDType.Singer;
        SingerConfig sc = null;
        int c = s_singer_configs1.size();
        for ( int i = 0; i < c; i++ ) {
            if ( s_singer_configs1.get( i ).VOICENAME.equals( singer_name ) ) {
                sc = s_singer_configs1.get( i );
                break;
            }
        }
        if ( sc == null ) {
            sc = new SingerConfig();
        }
        int lang = 0;
        for ( SingerConfig sc2 : s_installed_singers1 ) {
            if ( sc.VOICEIDSTR.equals( sc2.VOICEIDSTR ) ) {
                lang = (int)getLanguageFromName( sc.VOICENAME );
                break;
            }
        }
        ret.iconHandle = new IconHandle();
        ret.iconHandle.iconID = "$0701" + (new DecimalFormat( "0000" )).format( sc.program );
        ret.iconHandle.IDS = sc.VOICENAME;
        ret.iconHandle.index = 0;
        ret.iconHandle.language = lang;
        ret.iconHandle.length = 1;
        ret.iconHandle.original = sc.original;
        ret.iconHandle.program = sc.program;
        ret.iconHandle.caption = "";
        return ret;
    }

    public static VsqID getSingerID2( String singer_name ) {
        VsqID ret = new VsqID( 0 );
        ret.type = VsqIDType.Singer;
        SingerConfig sc = null;
        int c = s_singer_configs2.size();
        for ( int i = 0; i < c; i++ ) {
            if ( s_singer_configs2.get( i ).VOICENAME.equals( singer_name ) ) {
                sc = s_singer_configs2.get( i );
                break;
            }
        }
        if ( sc == null ) {
            sc = new SingerConfig();
        }
        int lang = 0;
        for( SingerConfig sc2 : s_installed_singers2 ) {
            if ( sc.VOICEIDSTR.equals( sc2.VOICEIDSTR ) ) {
                lang = (int)getLanguageFromName( sc.VOICENAME );
                break;
            }
        }
        ret.iconHandle = new IconHandle();
        ret.iconHandle.iconID = "$0701" + (new DecimalFormat( "0000" )).format( sc.program );
        ret.iconHandle.IDS = sc.VOICENAME;
        ret.iconHandle.index = 0;
        ret.iconHandle.language = lang;
        ret.iconHandle.length = 1;
        ret.iconHandle.original = sc.original;
        ret.iconHandle.program = sc.program;
        ret.iconHandle.caption = "";
        return ret;
    }

    public static SingerConfig[] getSingerConfigs1() {
        return s_singer_configs1.toArray( new SingerConfig[]{} );
    }

    public static SingerConfig[] getSingerConfigs2() {
        return s_singer_configs2.toArray( new SingerConfig[]{} );
    }

    public static double getAmplifyCoeffFromPanLeft( int pan ) {
        return pan / -64.0 + 1.0;
    }

    public static double getAmplifyCoeffFromPanRight( int pan ) {
        return pan / 64.0 + 1.0;
    }

    public static double getAmplifyCoeffFromFeder( int feder ) {
        return Math.exp( -1.26697245e-02 + 1.18448420e-01 * feder / 10.0 );
    }

    public static String getEditorPath2() {
        return s_editor_path2;
    }

    public static String getEditorPath1() {
        return s_editor_path1;
    }

    public static String getDllPathVsti2() {
        return s_dll_path2;
    }

    public static String getDllPathVsti1() {
        return s_dll_path1;
    }

    /// <summary>
    /// VOCALOID1システムのプロパティを取得
    /// </summary>
    private static void init_vocalo1( String logfile ) {
        try{
            StreamReader sr = new StreamReader( logfile );
            Vector<String> lines = new Vector<String>();
            String line;
            while( (line = sr.readLine()) != null ){
                lines.add( line );
            }
            sr.close();

            // vocaloid1 dll path
            // HKLM\\SOFTWARE\\VOCALOID\\APPLICATIONで始まる行を取得
            Vector<String> v1application = new Vector<String>();
            for( String s : lines ){
                if( s.toUpperCase().startsWith( "HKLM\\SOFTWARE\\VOCALOID\\APPLICATION\\" ) ){
                    v1application.add( s );
                }
            }
            for( String s : v1application ){
                s = s.substring( "HKLM\\SOFTWARE\\VOCALOID\\APPLICATION\\".length() );
                String[] spl_tab = s.split( "\t" );
                String[] spl_separator = spl_tab[0].split( "\\\\" );
                if( spl_separator.length == 1 && spl_tab[1].equals( "PATH" ) ){
                    String name = spl_tab[2];
                    if( name.toLowerCase().endsWith( "\\vocaloid.dll" ) ){
                        s_dll_path1 = name;
System.out.println( "s_dll_path1=" + name );
                    }else if( name.toLowerCase().endsWith( "\\vocaloid.exe" ) ){
                        s_editor_path1 = name;
System.out.println( "s_editor_path1=" + name );
                    }
                }
            }

            // voicedbdir for vocaloid1
            Vector<String> v1database = new Vector<String>();
            for( String s : lines ){
                if( s.toUpperCase().startsWith( "HKLM\\SOFTWARE\\VOCALOID\\DATABASE\\VOICE\\" ) ){
                    v1database.add( s );
                }else if( s.toUpperCase().startsWith( "HKLM\\SOFTWARE\\VOCALOID\\DATABASE\\VOICE\tVOICEDIR" ) ){
                    s = s.substring( "HKLM\\SOFTWARE\\VOCALOID\\DATABASE\\VOICE\tVOICEDIR\t".length() );
                    s_voicedbdir1 = s;
System.out.println( "s_voicedbdir1=" + s_voicedbdir1 );
                }
            }
            Vector<String> singer_voiceidstrs = new Vector<String>();
            Vector<String> vvoice_keys = new Vector<String>();
            Vector<SingerConfig> vvoice_values = new Vector<SingerConfig>();
            for( String s : v1database ){
                // HKLM\SOFTWARE\VOCALOID\DATABASE\VOICE\BLFEA6N2HTSKXLD7\vvoice vvoice1
                s = s.substring( "HKLM\\SOFTWARE\\VOCALOID\\DATABASE\\VOICE\\".length() );
                String[] spl_tab = s.split( "\t" );
                String[] spl_separator = spl_tab[0].split( "\\\\" );
                if( spl_separator.length == 2 && spl_separator[1].equals( "vvoice" ) ){
                    // s=BLFEA6N2HTSKXLD7\vvoice       vvoice1
                    String[] spl = s.split( "\\\\" );
                    s = spl[0];
                    if( !singer_voiceidstrs.contains( s ) ){
                        singer_voiceidstrs.add( s );
System.out.println( "s=" + s );
                    }
                }
            }
            // インストールされた歌手の.vvdを読みにいく
            // installdir以下の、拡張子.vvdのファイルを探す
            for( String voiceidstr : singer_voiceidstrs ){
                File installdir = new File( Path.combine( s_voicedbdir1, voiceidstr ) );
System.out.println( "installdir=" + installdir );
                for( File file : installdir.listFiles( new FileFilterWithExtension( ".vvd" ) ) ){
                    SingerConfig config = SingerConfig.readSingerConfig( file.getAbsolutePath(), 0 ); //とりあえずプログラムチェンジは0
                    s_installed_singers1.add( config );
System.out.println( "config=" + config.toString() );
                }
                // vvoice*.vvdを読みにいく。
                for( String s : v1database ){
                    String search = "HKLM\\SOFTWARE\\VOCALOID\\DATABASE\\VOICE\\" + voiceidstr + "\\vvoice\t";
                    if( s.startsWith( search ) ){
                        String vvd = s.substring( search.length() );
                        File file = new File( Path.combine( s_voicedbdir1, vvd.trim() + ".vvd" ) );
                        if( file.exists() ){
                            vvoice_keys.add( vvd );
                            SingerConfig sc = SingerConfig.readSingerConfig( file.getAbsolutePath(), 0 );
                            vvoice_values.add( sc );
System.out.println( "sc=" + sc.toString() );
                        }
                    }
                }
            }

            // voice.mapを読み込んで、s_singer_configs1のプログラムチェンジを更新する
            String map = Path.combine( s_voicedbdir1, "voice.map" );
            if ( (new File( map )).exists() ) {
                RandomAccessFile fs = new RandomAccessFile( map, "r" );
                byte[] dat = new byte[8];
                fs.seek( 0x20 );
                for ( int i = 0; i < MAX_SINGERS; i++ ) {
                    fs.read( dat, 0, 8 );
                    long value = makelong_le( dat );
                    if ( value >= 1 ) {
                        int c = vvoice_keys.size();
                        for ( int j = 0; j < c; j++ ) {
                            if ( vvoice_keys.get( j ).equals( "vvoice" + value ) ) {
                                vvoice_values.get( j ).program = i;
                            }
                        }
                    }
                }
            }

            // s_installed_singers1のSingerConfigのProgramとOriginalを適当に頒番する
            int c = s_installed_singers1.size();
            for ( int i = 0; i < c; i++ ) {
                s_installed_singers1.get( i ).program = i;
                s_installed_singers1.get( i ).original = i;
            }

            // s_singer_configs1を更新
            c = vvoice_values.size();
            int c2 = s_installed_singers1.size();
            for ( int i = 0; i < c; i++ ) {
                for ( int j = 0; j < c2; j++ ) {
                    if ( vvoice_values.get( i ).VOICEIDSTR.equals( s_installed_singers1.get( j ).VOICEIDSTR ) ){
                        vvoice_values.get( i ).original = s_installed_singers1.get( j ).program;
                        break;
                    }
                }
                s_singer_configs1.add( vvoice_values.get( i ) );
            }
        }catch( Exception ex ){
            System.out.println( "ex=" + ex );
        }
    }

    /// <summary>
    /// VOCALOID2システムのプロパティを取得
    /// </summary>
    private static void init_vocalo2( String logfile ) {
        try{
            StreamReader sr = new StreamReader( logfile );
            Vector<String> lines = new Vector<String>();
            String line;
            while( (line = sr.readLine()) != null ){
                lines.add( line );
            }
            sr.close();

            // vocaloid1 dll path
            // HKLM\\SOFTWARE\\VOCALOID\\APPLICATIONで始まる行を取得
            Vector<String> v2application = new Vector<String>();
            for( String s : lines ){
                if( s.toUpperCase().startsWith( "HKLM\\SOFTWARE\\VOCALOID2\\APPLICATION\\" ) ){
                    v2application.add( s );
                }
            }
            for( String s : v2application ){
                s = s.substring( "HKLM\\SOFTWARE\\VOCALOID2\\APPLICATION\\".length() );
                String[] spl_tab = s.split( "\t" );
                String[] spl_separator = spl_tab[0].split( "\\\\" );
                if( spl_separator.length == 1 && spl_tab[1].equals( "PATH" ) ){
                    String name = spl_tab[2];
                    if( name.toLowerCase().endsWith( "\\vocaloid2.dll" ) ){
                        s_dll_path2 = name;
System.out.println( "s_dll_path2=" + name );
                    }else if( name.toLowerCase().endsWith( "\\vocaloid2.exe" ) ){
                        s_editor_path2 = name;
System.out.println( "s_editor_path2=" + name );
                    }
                }
            }

            // voicedbdir for vocaloid1
            Vector<String> v2database = new Vector<String>();
            for( String s : lines ){
                if( s.toUpperCase().startsWith( "HKLM\\SOFTWARE\\VOCALOID2\\DATABASE\\VOICE\\" ) ){
                    v2database.add( s );
                }else if( s.toUpperCase().startsWith( "HKLM\\SOFTWARE\\VOCALOID2\\DATABASE\\VOICE\tVOICEDIR" ) ){
                    s = s.substring( "HKLM\\SOFTWARE\\VOCALOID2\\DATABASE\\VOICE\tVOICEDIR\t".length() );
                    s_voicedbdir2 = s;
System.out.println( "s_voicedbdir2=" + s_voicedbdir2 );
                }
            }
            Vector<String> singer_voiceidstrs = new Vector<String>();
            Vector<String> vvoice_keys = new Vector<String>();
            Vector<SingerConfig> vvoice_values = new Vector<SingerConfig>();
            for( String s : v2database ){
                // HKLM\SOFTWARE\VOCALOID\DATABASE\VOICE\BLFEA6N2HTSKXLD7\vvoice vvoice1
                s = s.substring( "HKLM\\SOFTWARE\\VOCALOID2\\DATABASE\\VOICE\\".length() );
                String[] spl_tab = s.split( "\t" );
                String[] spl_separator = spl_tab[0].split( "\\\\" );
                if( spl_separator.length == 2 && spl_separator[1].equals( "vvoice" ) ){
                    // s=BLFEA6N2HTSKXLD7\vvoice       vvoice1
                    String[] spl = s.split( "\\\\" );
                    s = spl[0];
                    if( !singer_voiceidstrs.contains( s ) ){
                        singer_voiceidstrs.add( s );
System.out.println( "s=" + s );
                    }
                }
            }
            // インストールされた歌手の.vvdを読みにいく
            // installdir以下の、拡張子.vvdのファイルを探す
            for( String voiceidstr : singer_voiceidstrs ){
                //HKLM\SOFTWARE\VOCALOID2\DATABASE\VOICE\BHHN4EF9BRWTNHAB	INSTALLDIR	
                String dir = "";
                for( String s : v2database ){
                    String search = "HKLM\\SOFTWARE\\VOCALOID2\\DATABASE\\VOICE\\" + voiceidstr + "\tINSTALLDIR\t";
                    if( s.startsWith( search ) ){
                        dir = s.substring( search.length() );
                        break;
                    }
                }
                File installdir = new File( Path.combine( dir, voiceidstr ) );
System.out.println( "installdir=" + installdir );
                for( File file : installdir.listFiles( new FileFilterWithExtension( ".vvd" ) ) ){
                    SingerConfig config = SingerConfig.readSingerConfig( file.getAbsolutePath(), 0 ); //とりあえずプログラムチェンジは0
                    config.VOICEIDSTR = voiceidstr;
                    s_installed_singers2.add( config );
System.out.println( "config=" + config.toString() );
                }
                // vvoice*.vvdを読みにいく。
                for( String s : v2database ){
                    String search = "HKLM\\SOFTWARE\\VOCALOID2\\DATABASE\\VOICE\\" + voiceidstr + "\\vvoice\t";
                    if( s.startsWith( search ) ){
                        String vvd = s.substring( search.length() );
                        File file = new File( Path.combine( s_voicedbdir2, vvd.trim() + ".vvd" ) );
                        if( file.exists() ){
                            vvoice_keys.add( vvd );
                            SingerConfig sc = SingerConfig.readSingerConfig( file.getAbsolutePath(), 0 );
                            vvoice_values.add( sc );
System.out.println( "sc=" + sc.toString() );
                        }
                    }
                }
            }

            // voice.mapを読み込んで、s_singer_configs1のプログラムチェンジを更新する
            String map = Path.combine( s_voicedbdir2, "voice.map" );
            if ( (new File( map )).exists() ) {
                RandomAccessFile fs = new RandomAccessFile( map, "r" );
                byte[] dat = new byte[8];
                fs.seek( 0x20 );
                for ( int i = 0; i < MAX_SINGERS; i++ ) {
                    fs.read( dat, 0, 8 );
                    long value = makelong_le( dat );
                    if ( value >= 1 ) {
                        int c = vvoice_keys.size();
                        for ( int j = 0; j < c; j++ ) {
                            if ( vvoice_keys.get( j ).equals( "vvoice" + value ) ) {
                                vvoice_values.get( j ).program = i;
                            }
                        }
                    }
                }
            }

            // s_installed_singers1のSingerConfigのProgramとOriginalを適当に頒番する
            int c = s_installed_singers2.size();
            for ( int i = 0; i < c; i++ ) {
                s_installed_singers2.get( i ).program = i;
                s_installed_singers2.get( i ).original = i;
            }

            // s_singer_configs1を更新
            c = vvoice_values.size();
            int c2 = s_installed_singers2.size();
            for ( int i = 0; i < c; i++ ) {
                for ( int j = 0; j < c2; j++ ) {
                    if ( vvoice_values.get( i ).VOICEIDSTR.equals( s_installed_singers2.get( j ).VOICEIDSTR ) ){
                        vvoice_values.get( i ).original = s_installed_singers2.get( j ).program;
                        break;
                    }
                }
                s_singer_configs2.add( vvoice_values.get( i ) );
            }
        }catch( Exception ex ){
            System.out.println( "ex=" + ex );
        }
    }

    /* /// <summary>
    /// VOCALOID2システムのプロパティを取得
    /// </summary>
    private static void init_vocalo2() {
        // 最初はvstiとeditorのパスを取得
        RegistryKey v2application = Registry.LocalMachine.OpenSubKey( "SOFTWARE\\VOCALOID2\\APPLICATION", false );
        if ( v2application == null ) {
            v2application = Registry.LocalMachine.OpenSubKey( "SOFTWARE\\VOCALOID2_DEMO\\APPLICATION", false );
        }
        if ( v2application != null ) {
            string[] keys = v2application.GetSubKeyNames();
            for ( int i = 0; i < keys.Length; i++ ) {
                RegistryKey key = v2application.OpenSubKey( keys[i], false );
                if ( key != null ) {
                    string name = (string)key.GetValue( "PATH" );
                    if ( name.ToLower().EndsWith( "\\vocaloid2.dll" ) ) {
                        s_dll_path2 = name;
                    } else if ( name.ToLower().EndsWith( "\\vocaloid2_demo.dll" ) ) {
                        s_dll_path2 = name;
                    } else if ( name.ToLower().EndsWith( "\\vocaloid2.exe" ) ) {
                        s_editor_path2 = name;
                    }
                    key.Close();
                }
            }
            v2application.Close();
        }

        // 歌声データベースを取得
        RegistryKey v2database = Registry.LocalMachine.OpenSubKey( "SOFTWARE\\VOCALOID2\\DATABASE\\VOICE", false );
        if ( v2database != null ) {
            // データベース（というよりもvoice.map）が保存されているパスを取得
            s_voicedbdir2 = (string)v2database.GetValue( "VOICEDIR", "" );
            // インストールされている歌手のVOICEIDSTRを列挙
            string[] singer_voiceidstrs = v2database.GetSubKeyNames();
            List<string> vvoice_keys = new List<string>();
            List<SingerConfig> vvoice_values = new List<SingerConfig>();
            foreach ( string voiceidstr in singer_voiceidstrs ) {
                RegistryKey singer = v2database.OpenSubKey( voiceidstr );
                if ( singer == null ) {
                    continue;
                }
                string installdir = (string)singer.GetValue( "INSTALLDIR", "" );
#if DEBUG
                Console.WriteLine( "installdir=" + installdir );
#endif
                RegistryKey vvoice = singer.OpenSubKey( "vvoice" );
                if ( vvoice != null ) {
                    string[] vvoices = vvoice.GetValueNames();

                    // インストールされた歌手の.vvdを読みにいく
                    // installdir以下の、拡張子.vvdのファイルを探す
                    foreach ( string file in Directory.GetFiles( Path.Combine( installdir, voiceidstr ), "*.vvd" ) ) {
                        SingerConfig config = SingerConfig.readSingerConfig( file, 0 ); //とりあえずプログラムチェンジは0
                        s_installed_singers2.Add( config );
                    }

                    // vvoice*.vvdを読みにいく。場所は、installdirではなく、s_voicedbdir2
                    foreach ( string s in vvoices ) {
                        string file = Path.Combine( s_voicedbdir2, s + ".vvd" );
                        if ( File.Exists( file ) ) {
                            SingerConfig config = SingerConfig.readSingerConfig( file, 0 );
                            vvoice_keys.Add( s );
                            vvoice_values.Add( config );
                        }
                    }
                }
                singer.Close();
            }

            // voice.mapを読み込んで、s_singer_configs2のプログラムチェンジを更新する
            string map = Path.Combine( s_voicedbdir2, "voice.map" );
            if ( File.Exists( map ) ) {
                using ( FileStream fs = new FileStream( map, FileMode.Open, FileAccess.Read ) ) {
                    byte[] dat = new byte[8];
                    fs.Seek( 0x20, SeekOrigin.Begin );
                    for ( int i = 0; i < MAX_SINGERS; i++ ) {
                        fs.Read( dat, 0, 8 );
                        ulong value = makelong_le( dat );
                        if ( value >= 1 ) {
#if DEBUG
                            Console.WriteLine( "value=" + value );
#endif
                            for ( int j = 0; j < vvoice_keys.Count; j++ ) {
                                if ( vvoice_keys[j] == "vvoice" + value ) {
                                    vvoice_values[j].Program = i;
                                }
                            }
                        }
                    }
                }
            }

            // s_installed_singers2のSingerConfigのProgramとOriginalを適当に頒番する
            for ( int i = 0; i < s_installed_singers2.Count; i++ ) {
                s_installed_singers2[i].Program = i;
                s_installed_singers2[i].Original = i;
            }

            // s_singer_configs2を更新
            for ( int i = 0; i < vvoice_values.Count; i++ ) {
                for ( int j = 0; j < s_installed_singers2.Count; j++ ) {
                    if ( vvoice_values[i].VOICEIDSTR == s_installed_singers2[j].VOICEIDSTR ) {
                        vvoice_values[i].Original = s_installed_singers2[j].Program;
                        break;
                    }
                }
                s_singer_configs2.Add( vvoice_values[i] );
            }
            v2database.Close();
        }
    }
*/
    /// <summary>
    /// Transform the byte array(length=8) to unsigned long, assuming that the byte array is little endian.
    /// </summary>
    /// <param name="oct"></param>
    /// <returns></returns>
    private static long makelong_le( byte[] oct ) {
        return (0xff & oct[7]) << 56 | (0xff & oct[6]) << 48 | (0xff & oct[5]) << 40 | (0xff & oct[4]) << 32 | (0xff & oct[3]) << 24 | (0xff & oct[2]) << 16 | (0xff & oct[1]) << 8 | (0xff & oct[0]);
    }
}
